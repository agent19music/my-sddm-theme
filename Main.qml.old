import QtQuick 2.15
import QtQuick.Controls 2.15
import QtQuick.Layouts 1.15
import QtGraphicalEffects 1.15
import SddmComponents 2.0

Rectangle {
    id: root
    width: Screen.width
    height: Screen.height
    
    property string selectedUser: ""
    property string selectedSession: sessionModel.lastIndex
    
    // Hyprlock colors - matching your theme/colors.conf
    readonly property color murderColor: "#a31621"
    readonly property color accentColor: "#FCF7F8"
    readonly property color bgDarkColor: "#121212"
    readonly property color baseColor: "#24273a"
    readonly property string fontFamily: "Maple Mono NF"
    
    // Background matching hyprlock
    Image {
        id: background
        anchors.fill: parent
        source: config.background || "assets/darkredstevelacy.png"
        fillMode: Image.PreserveAspectCrop
        
        // Apply hyprlock blur and effects
        layer.enabled: true
        layer.effect: GaussianBlur {
            radius: 12  // blur_passes = 3, blur_size = 4
            samples: 24
            deviation: 4
        }
    }
    
    // Background adjustments like hyprlock
    Rectangle {
        anchors.fill: parent
        color: murderColor
        opacity: 0.2  // brightness = 0.8, so darken by 0.2
    }
    
    // Blur effect for login box background
    FastBlur {
        anchors.fill: loginContainer
        source: background
        radius: 64
        transparentBorder: true
    }
    
    // Main login container
    Rectangle {
        id: loginContainer
        width: 420
        height: 520
        anchors.centerIn: parent
        color: Qt.rgba(0.1, 0.1, 0.1, 0.85)
        radius: 20
        border.width: 1
        border.color: Qt.rgba(1, 1, 1, 0.1)
        
        // Drop shadow
        layer.enabled: true
        layer.effect: DropShadow {
            transparentBorder: true
            horizontalOffset: 0
            verticalOffset: 10
            radius: 20
            samples: 41
            color: Qt.rgba(0, 0, 0, 0.6)
        }
        
        ColumnLayout {
            anchors.fill: parent
            anchors.margins: 40
            spacing: 20
            
            // Logo/Avatar
            Rectangle {
                Layout.alignment: Qt.AlignHCenter
                width: 100
                height: 100
                radius: 50
                color: Qt.rgba(1, 1, 1, 0.1)
                border.width: 2
                border.color: config.accentColor || "#4A9EFF"
                
                Image {
                    id: userAvatar
                    anchors.fill: parent
                    anchors.margins: 3
                    source: "assets/avatar.jpg"
                    fillMode: Image.PreserveAspectCrop
                    layer.enabled: true
                    layer.effect: OpacityMask {
                        maskSource: Rectangle {
                            width: userAvatar.width
                            height: userAvatar.height
                            radius: width/2
                        }
                    }
                }
            }
            
            // Welcome text
            Text {
                Layout.alignment: Qt.AlignHCenter
                text: "Welcome"
                font.pixelSize: 28
                font.weight: Font.Light
                color: "white"
            }
            
            // Username field
            TextField {
                id: usernameField
                Layout.fillWidth: true
                Layout.preferredHeight: 50
                placeholderText: "Username"
                font.pixelSize: 16
                color: "white"
                
                background: Rectangle {
                    radius: 8
                    color: Qt.rgba(1, 1, 1, 0.1)
                    border.width: 1
                    border.color: usernameField.focus ? (config.accentColor || "#4A9EFF") : Qt.rgba(1, 1, 1, 0.2)
                    
                    Behavior on border.color {
                        ColorAnimation { duration: 200 }
                    }
                }
                
                leftPadding: 15
                rightPadding: 15
                
                Keys.onTabPressed: passwordField.focus = true
                Keys.onReturnPressed: passwordField.focus = true
            }
            
            // Password field
            TextField {
                id: passwordField
                Layout.fillWidth: true
                Layout.preferredHeight: 50
                placeholderText: "Password"
                echoMode: TextInput.Password
                font.pixelSize: 16
                color: "white"
                
                background: Rectangle {
                    radius: 8
                    color: Qt.rgba(1, 1, 1, 0.1)
                    border.width: 1
                    border.color: passwordField.focus ? (config.accentColor || "#4A9EFF") : Qt.rgba(1, 1, 1, 0.2)
                    
                    Behavior on border.color {
                        ColorAnimation { duration: 200 }
                    }
                }
                
                leftPadding: 15
                rightPadding: 15
                
                Keys.onTabPressed: usernameField.focus = true
                Keys.onReturnPressed: loginButton.clicked()
            }
            
            // Session selector
            ComboBox {
                id: sessionSelector
                Layout.fillWidth: true
                Layout.preferredHeight: 45
                model: sessionModel
                currentIndex: sessionModel.lastIndex
                textRole: "name"
                
                background: Rectangle {
                    radius: 8
                    color: Qt.rgba(1, 1, 1, 0.1)
                    border.width: 1
                    border.color: Qt.rgba(1, 1, 1, 0.2)
                }
                
                contentItem: Text {
                    leftPadding: 15
                    text: sessionSelector.displayText
                    font.pixelSize: 14
                    color: "white"
                    verticalAlignment: Text.AlignVCenter
                }
                
                delegate: ItemDelegate {
                    width: sessionSelector.width
                    height: 40
                    
                    contentItem: Text {
                        text: model.name
                        color: "white"
                        font.pixelSize: 14
                        verticalAlignment: Text.AlignVCenter
                        leftPadding: 15
                    }
                    
                    background: Rectangle {
                        color: hovered ? Qt.rgba(1, 1, 1, 0.1) : "transparent"
                    }
                }
                
                popup: Popup {
                    y: sessionSelector.height + 5
                    width: sessionSelector.width
                    padding: 0
                    
                    contentItem: ListView {
                        clip: true
                        implicitHeight: contentHeight
                        model: sessionSelector.popup.visible ? sessionSelector.delegateModel : null
                        currentIndex: sessionSelector.highlightedIndex
                        
                        ScrollIndicator.vertical: ScrollIndicator { }
                    }
                    
                    background: Rectangle {
                        radius: 8
                        color: Qt.rgba(0.15, 0.15, 0.15, 0.95)
                        border.width: 1
                        border.color: Qt.rgba(1, 1, 1, 0.2)
                    }
                }
            }
            
            // Login button
            Button {
                id: loginButton
                Layout.fillWidth: true
                Layout.preferredHeight: 50
                text: "Login"
                font.pixelSize: 16
                font.weight: Font.Medium
                
                background: Rectangle {
                    radius: 8
                    gradient: Gradient {
                        GradientStop { position: 0.0; color: config.accentColor || "#4A9EFF" }
                        GradientStop { position: 1.0; color: Qt.darker(config.accentColor || "#4A9EFF", 1.2) }
                    }
                    
                    Rectangle {
                        anchors.fill: parent
                        radius: 8
                        color: "white"
                        opacity: loginButton.hovered ? 0.1 : 0
                        
                        Behavior on opacity {
                            NumberAnimation { duration: 200 }
                        }
                    }
                }
                
                contentItem: Text {
                    text: loginButton.text
                    font: loginButton.font
                    color: "white"
                    horizontalAlignment: Text.AlignHCenter
                    verticalAlignment: Text.AlignVCenter
                }
                
                onClicked: {
                    sddm.login(usernameField.text, passwordField.text, sessionSelector.currentIndex)
                }
            }
            
            // Error message
            Text {
                id: errorMessage
                Layout.fillWidth: true
                horizontalAlignment: Text.AlignHCenter
                color: "#FF5252"
                font.pixelSize: 12
                visible: false
            }
            
            Item {
                Layout.fillHeight: true
            }
        }
    }
    
    // Power options
    Row {
        anchors.bottom: parent.bottom
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.bottomMargin: 50
        spacing: 30
        
        // Shutdown button
        Button {
            width: 50
            height: 50
            
            background: Rectangle {
                radius: 25
                color: Qt.rgba(1, 1, 1, 0.1)
                border.width: 1
                border.color: Qt.rgba(1, 1, 1, 0.2)
                
                Rectangle {
                    anchors.fill: parent
                    radius: 25
                    color: "white"
                    opacity: parent.parent.hovered ? 0.1 : 0
                    
                    Behavior on opacity {
                        NumberAnimation { duration: 200 }
                    }
                }
            }
            
            Text {
                anchors.centerIn: parent
                text: "⏻"
                font.pixelSize: 24
                color: "white"
            }
            
            onClicked: sddm.powerOff()
        }
        
        // Reboot button
        Button {
            width: 50
            height: 50
            
            background: Rectangle {
                radius: 25
                color: Qt.rgba(1, 1, 1, 0.1)
                border.width: 1
                border.color: Qt.rgba(1, 1, 1, 0.2)
                
                Rectangle {
                    anchors.fill: parent
                    radius: 25
                    color: "white"
                    opacity: parent.parent.hovered ? 0.1 : 0
                    
                    Behavior on opacity {
                        NumberAnimation { duration: 200 }
                    }
                }
            }
            
            Text {
                anchors.centerIn: parent
                text: "↻"
                font.pixelSize: 24
                color: "white"
            }
            
            onClicked: sddm.reboot()
        }
        
        // Suspend button
        Button {
            width: 50
            height: 50
            
            background: Rectangle {
                radius: 25
                color: Qt.rgba(1, 1, 1, 0.1)
                border.width: 1
                border.color: Qt.rgba(1, 1, 1, 0.2)
                
                Rectangle {
                    anchors.fill: parent
                    radius: 25
                    color: "white"
                    opacity: parent.parent.hovered ? 0.1 : 0
                    
                    Behavior on opacity {
                        NumberAnimation { duration: 200 }
                    }
                }
            }
            
            Text {
                anchors.centerIn: parent
                text: "⏾"
                font.pixelSize: 24
                color: "white"
            }
            
            onClicked: sddm.suspend()
        }
    }
    
    // Date and time
    Column {
        anchors.top: parent.top
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.topMargin: 50
        spacing: 5
        
        Text {
            id: timeText
            anchors.horizontalCenter: parent.horizontalCenter
            font.pixelSize: 72
            font.weight: Font.Thin
            color: "white"
        }
        
        Text {
            id: dateText
            anchors.horizontalCenter: parent.horizontalCenter
            font.pixelSize: 18
            font.weight: Font.Light
            color: "white"
        }
    }
    
    // Timer for updating time
    Timer {
        interval: 1000
        running: true
        repeat: true
        onTriggered: {
            var now = new Date()
            timeText.text = Qt.formatTime(now, "hh:mm")
            dateText.text = Qt.formatDate(now, "dddd, MMMM d")
        }
        triggeredOnStart: true
    }
    
    // Handle login response
    Connections {
        target: sddm
        
        function onLoginSucceeded() {
            // Login successful
        }
        
        function onLoginFailed() {
            errorMessage.text = "Invalid username or password"
            errorMessage.visible = true
            passwordField.text = ""
            passwordField.focus = true
        }
    }
    
    Component.onCompleted: {
        // Set initial focus
        if (config.autoFocusPassword == "true") {
            passwordField.focus = true
        } else {
            usernameField.focus = true
        }
    }
}
